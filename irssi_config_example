# irssi configuration example
# Modified 2009-07-31
# A more recent version of this file may be found at http://misc.nybergh/pub/irssi
#
# The base of this quite trivial irssi configuration example was given to me by a nameless knight in
# shining loonix armor some time ago. If you know irssi, this file will be a boring read. Go away.

# The reliability status of this configuration is "Works for me".
# Send whine and complaints to /dev/null, suggestions and fanmail to thomas at nybergh.net
# See alsø: http://www.nybergh.net

# This file is to be named ~/.irssi/config

# Using this configuration, your channels and queries will be
# logged in a sensible way under ~/irclogs/[chatnet]/[windowname].log

# THIS PART HANDLES SERVERS
servers = (
  {
    address = "se.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.cc.tut.fi";
    chatnet = "IRCnet";
    port = "6660";
    autoconnect = "Yes";
  },
  {
    address = "chat.eu.freenode.net";
    chatnet = "FreeNode";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.efnet.us";
    chatnet = "EFnet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.dal.net";
    chatnet = "DALnet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "NYC.ZUH.Net";
    chatnet = "ZUHnet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.oftc.net";
    chatnet = "OFTC";
    port = "6667";
    autoconnect = "Yes";
  },

# This is an ssl-encrypted server
  {
    address = "some.private.server";
    chatnet = "SomePrivateIrcNetwork";
    port = "6667";
    use_ssl = "ON";
    autoconnect = "Yes";
  },
  {
    address = "us.slashnet.org";
    chatnet = "SlashNET";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.audioscrobbler.com";
    chatnet = "Phasenet";
    port = "6667";
    autoconnect = "Yes";
  },
  {
    address = "irc.dslextreme.com";
    port = "6667";
    autoconnect = "Yes";
    chatnet = "DSLxNet";
  },
  {
    address = "localhost";
    port = "6667";
    autoconnect = "Yes";
    chatnet = "BitlBee";
  },

);

#THIS PART HANDLES CHATNETS/IRC NETWORKS
chatnets = {
  QuakeNet = {
    type = "IRC";
# This is how I auth myself at QuakeNet
    autosendcmd = "/^MSG Q@CServe.quakenet.org auth username password;
  };

# If you like irssi, and want to do avoid all other chat software,
# take a look at BitlBee (http://www.bitlbee.org). This offers a relatively easy to set up 
# an IRC -> Jabber/Windows Live/Yahoo/[name of proprietary chat system here]-gateway
# I used these guides to get my copy up and running:
# http://f0rked.com/public/bitlbee-user-guide.html
# http://thinkhole.org/wp/2006/09/20/howto-connect-to-google-talk-with-bitlbee/
# Please note that I only run BitlBee in a setup that allows me to connect from localhost, 
# I don't know if BitlBee is to be trusted as a service visible to the entire internets.
  BitlBee = {
    type = "IRC";
    autosendcmd = "/^MSG root identify password; \012/MSG root account on 0; \012/MSG root account on 1";
  };
  IRCnet = { type = "IRC"; };
  DSLxNET = { type = "IRC"; };


  ZUHnet = { type = "IRC"; };
  TheLinuxLink = { type = "IRC"; };
  OFTC = { type = "IRC"; };
  SlashNET = {
    type = "IRC";
    autosendcmd = "MSG nickserv IDENTIFY password";
  };
  FreeNode = {
    type = "IRC";
    autosendcmd = "MSG NickServ IDENTIFY password; /MODE nick -i";
  };

  EFnet = { type = "IRC"; };
  Undernet = { type = "IRC"; };
  DALnet = {
    type = "IRC";
    autosendcmd = "/^msg nickserv@services.dal.net identify password";
  };
  SomePrivateIrcNetwork = { type = "IRC"; };
  Phasenet = { type = "IRC"; };
  Assembly = { type = "IRC"; };
};

channels = (
  { name = "#DraguNet"; chatnet = "QuakeNet"; autojoin = "Yes"; },
# Define a password/keyword for channels if necessary
  { name = "#ChannelName keyword"; chatnet = "FreeNode"; autojoin = "Yes"; },

);

#THIS PART DEFINES COMMAND ALIASES

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
};

# THIS PART CONFIGURES THE STATUS BAR

#statusbar = {
# formats:
# when using {templates}, the template is shown only if it's argument isn't
# empty unless no argument is given. for example {sb} is printed always,
# but {sb $T} is printed only if $T isn't empty.
statusbar = {
  default = {
    topic = {
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    window = {
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
# I used to run this script from http://irssi.org/scripts/scripts/centericq.pl
# to get notifications of actions within the centericq chat client. These days I use
# BitlBee for all my non-irc chat needs.
        centericq = { };
      };
    };
  };
};

# THIS PART CONFIGURES IRSSI'S MOST CENTRAL PARTS

# This defines recoding stuff for channels and networks. For compability i use  
# ISO-8859-15 locales on my shell box.
conversions = {
# irc channels
  "#debian.se" = "ISO-8859-15";
  "!Assembly" = "ISO-8859-15";
# irc networks
  BitlBee = "iso-8859-15";
};

settings = {
  core = {
    real_name = "Your Name";
    user_name = "my_cool_username";
    nick = "my_cool_nick";
    timestamp_format = "%H:%M";
    recode = "yes";
    recode_autodetect_utf8 = "yes";
    #   recode_fallback = "= CP1252";
    recode_out_default_charset = "= UTF-8";
    recode_transliterate = "no";
    log_timestamp = "%H:%M:%S ";
  };

  "fe-common/core" = {
    autolog = "yes";
    term_charset = "ISO-8859-15";
    activity_hide_level = "= JOINS QUITS";
  };

  "irc/core" = {
    lag_max_before_disconnect = "0";
    ctcp_version_reply = "irssi - running on GNU/Linux";
  };
  "fe-text" = { actlist_sort = "refnum"; };
};
logs = { };
hilights = (
  {
# URL hilighting by Stig Gronroos, http://www.waino.org
# Used with a terminal emulator that provides clickable URLs, this is a real sanity saver. 
# Unless you adore 80's style GUIs, *don't* use a terminal emulator without URL detection. 
# Some free/open terminal emulators with URL detection:
#
# MS Windows: 
# PuTTY Tray (patched PuTTY)
# http://haanstra.eu/putty/
#
# UNIX, GNU/Linux and similar:
# Gnome-terminal (installed by default in most Gnome distributions)
# http://directory.fsf.org/project/gnome-terminal/
#
# Apple OSX
# iTerm (I don't own a machine from Evil Fruit Inc., so I can't confirm that iTerm has 
# working URL detection)
# http://iterm.sourceforge.net/
#
   text = "http(s)?://[A-Za-z0-9_/&?=%.;~#)(+-]*";
    color = "%G";
    act_color = "%n";
    nick = "no";
    word = "yes";
    regexp = "yes";
  },
# important words you want to be miss
  { text = "my_cool_nick"; nick = "yes"; word = "yes"; },
  { text = "free beer"; nick = "no"; word = "yes"; },
);
# THAT'S IT
# When you've organized your irssi according to your taste (/window move [number], etc.),
# run /layout save and /save. Your window layout will be added to the end of this 
# file by irssi.
# kthxbye
